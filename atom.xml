<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>judy&#39;s blog</title>
  
  <subtitle>Stay Hungry, Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qiqine.github.io/"/>
  <updated>2018-11-21T10:04:09.220Z</updated>
  <id>http://qiqine.github.io/</id>
  
  <author>
    <name>Judy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动端适配</title>
    <link href="http://qiqine.github.io/2018/11/21/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    <id>http://qiqine.github.io/2018/11/21/移动端适配/</id>
    <published>2018-11-21T08:09:28.000Z</published>
    <updated>2018-11-21T10:04:09.220Z</updated>
    
    <content type="html"><![CDATA[<p>移动端常见的问题整理<br><a id="more"></a></p><h3 id="禁止用户缩放页面"><a href="#禁止用户缩放页面" class="headerlink" title="禁止用户缩放页面"></a>禁止用户缩放页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="禁止将页面中的数字识别为电话号码"><a href="#禁止将页面中的数字识别为电话号码" class="headerlink" title="禁止将页面中的数字识别为电话号码"></a>禁止将页面中的数字识别为电话号码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="忽略对邮箱地址的识别"><a href="#忽略对邮箱地址的识别" class="headerlink" title="忽略对邮箱地址的识别"></a>忽略对邮箱地址的识别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="将网站添加到主屏幕快速启动方式（仅针对ios的safari有效）"><a href="#将网站添加到主屏幕快速启动方式（仅针对ios的safari有效）" class="headerlink" title="将网站添加到主屏幕快速启动方式（仅针对ios的safari有效）"></a>将网站添加到主屏幕快速启动方式（仅针对ios的safari有效）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</span><br><span class="line">&lt;!-- 可选default、black、black-translucent --&gt;</span><br></pre></td></tr></table></figure><h3 id="移动端如何定义字体font-family"><a href="#移动端如何定义字体font-family" class="headerlink" title="移动端如何定义字体font-family"></a><a href="http://www.cnblogs.com/PeunZhang/p/3592096.html" target="_blank" rel="noopener">移动端如何定义字体font-family</a></h3><p>中文字体使用系统默认，英文用Helvetica</p><figure class="highlight plain"><figcaption><span>移动端定义字体的代码 */</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body&#123;font-family:Helvetica;&#125;</span><br></pre></td></tr></table></figure><h3 id="禁止iOS-amp-android长按时下载图片"><a href="#禁止iOS-amp-android长按时下载图片" class="headerlink" title="禁止iOS&amp;android长按时下载图片"></a>禁止iOS&amp;android长按时下载图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.css&#123;-webkit-touch-callout: none&#125;</span><br></pre></td></tr></table></figure><h3 id="禁止iOS和android用户选中文字"><a href="#禁止iOS和android用户选中文字" class="headerlink" title="禁止iOS和android用户选中文字"></a>禁止iOS和android用户选中文字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.css&#123;-webkit-user-select:none&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;移动端常见的问题整理&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Async/Await异步编程</title>
    <link href="http://qiqine.github.io/2018/11/19/Async:Await%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    <id>http://qiqine.github.io/2018/11/19/Async:Await异步编程/</id>
    <published>2018-11-19T13:54:12.421Z</published>
    <updated>2018-11-19T13:57:49.497Z</updated>
    
    <content type="html"><![CDATA[<p>由于js是单线程的，所以说到js异步编程，我们会马上想到一个词“回调地狱”<br><a id="more"></a><br><img src="https://leokongwq.github.io/2017/12/16/vertx-async-callback-hell/call-back-hello.jpg" alt="此处输入图片的描述"></p><blockquote><p>回调函数<br>promise对象<br>Generator<br>Async函数</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/1600/1*ko3KtcVSlzpe3RnTRgJaHw.jpeg" alt="此处输入图片的描述"><br>关于异步处理，ES5的回调使我们陷入地狱，ES6的Promise使我们脱离魔障，终于、ES7的async-await带我们走向光明。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="1、async"><a href="#1、async" class="headerlink" title="1、async"></a>1、async</h3><pre><code>// Normal Functionfunction add(x,y){  return x + y;}// Async Functionasync function add(x,y){  return x + y;}</code></pre><p>async function 是什么 Object？</p><pre><code>console.log(async function () {}.constructor);console.log(async function () {}.__proto__);</code></pre><h3 id="2、await"><a href="#2、await" class="headerlink" title="2、await"></a>2、await</h3><pre><code>async function f() {    let result = await Math.random();    console.log(result);}f();</code></pre><blockquote><p>函数必须是async定义<br>await 在 async 函数内部使用<br>返回一个promise对象</p></blockquote><h2 id="promise和async的关系？"><a href="#promise和async的关系？" class="headerlink" title="promise和async的关系？"></a>promise和async的关系？</h2><pre><code>async function f() {  return 1;}f().then(alert); // 1async function f() {  return Promise.resolve(1);}f().then(alert); // 1</code></pre><blockquote><p>async函数会返回一个promise对象</p></blockquote><h3 id="promise和async"><a href="#promise和async" class="headerlink" title="promise和async"></a>promise和async</h3><pre><code>function doubleAfter2Seconds(x) {  return new Promise(resolve =&gt; {    setTimeout(() =&gt; {      resolve(x * 2);    }, 2000);  });}doubleAfter2Seconds(10).then((r) =&gt; {      console.log(r);    });async function doubleAsync(){    let r=await doubleAfter2Seconds(10);    console.log(r);}</code></pre><h3 id="一个promise的语法糖？"><a href="#一个promise的语法糖？" class="headerlink" title="一个promise的语法糖？"></a>一个promise的语法糖？</h3><pre><code>let sum =   doubleAfter2Seconds(10)          + doubleAfter2Seconds(20)          + doubleAfter2Seconds(30);console.log(sum);function addPromise(x){  return new Promise(resolve =&gt; {    doubleAfter2Seconds(10).then((a) =&gt; {      doubleAfter2Seconds(20).then((b) =&gt; {        doubleAfter2Seconds(30).then((c) =&gt; {          resolve(x + a + b + c);        })      })    })  });}addPromise(10).then((sum) =&gt; {  console.log(sum);});async function addAsync(x) {  const a = await doubleAfter2Seconds(10);  const b = await doubleAfter2Seconds(20);  const c = await doubleAfter2Seconds(30);  return x + a + b + c;}</code></pre><p><a href="https://babeljs.cn/repl/#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;code_lz=IYZwngdgxgBAZgV2gFwJYHsLwBQEoDeAUDDAE4CmyCpWAjANyEC-hceAdMgBbkTbAAbcqWS5CQA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=true&amp;fileSize=false&amp;lineWrap=false&amp;presets=es2015%2Clatest&amp;prettier=false&amp;targets=&amp;version=6.26.0&amp;envVersion=" target="_blank" rel="noopener">https://babeljs.cn/repl/#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;code_lz=IYZwngdgxgBAZgV2gFwJYHsLwBQEoDeAUDDAE4CmyCpWAjANyEC-hceAdMgBbkTbAAbcqWS5CQA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=true&amp;fileSize=false&amp;lineWrap=false&amp;presets=es2015%2Clatest&amp;prettier=false&amp;targets=&amp;version=6.26.0&amp;envVersion=</a></p><h2 id="Generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h2><pre><code>function* gen(x){  var y = yield x + 2;  return y;}var g = gen(1);g.next() // { value: 3, done: false }g.next() // { value: undefined, done: true }</code></pre><p>自执行函数</p><pre><code>function run(fn) {  var gen = fn();  function next(err, data) {    var result = gen.next(data);    if (result.done) return;    result.value(next);  }  next();}run(gen);</code></pre><blockquote><p>async其实就是generator+自执行函数的一个语法糖</p></blockquote><h3 id="循环多个await"><a href="#循环多个await" class="headerlink" title="循环多个await"></a>循环多个await</h3><pre><code>var start = async function () {    for (var i = 1; i &lt;= 10; i++) {        let n = await doubleAfter2Seconds(i);        console.log(n)    }};</code></pre><blockquote><p>await必须在async函数的上下文中，否则报错<br>    [1,2,3].forEach(function (v) {<br>        let n = await doubleAfter2Seconds(v); // 错误!!<br>        console.log(n)<br>    });</p></blockquote><h3 id="Await-并行"><a href="#Await-并行" class="headerlink" title="Await 并行"></a>Await 并行</h3><pre><code>var results = await Promise.all([sleep(1), sleep(2)]);</code></pre><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><pre><code>var sleep = function (time) {    return new Promise(function (resolve, reject) {        setTimeout(function () {            // 模拟出错了，返回 ‘error’            reject(&apos;error&apos;);        }, time);    })};var start = async function () {    try {        console.log(&apos;start&apos;);        await sleep(3000); // 这里得到了一个返回错误        // 所以以下代码不会被执行了        console.log(&apos;end&apos;);    } catch (err) {        console.log(err); // 这里捕捉到错误 `error`    }};</code></pre><h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><p><a href="https://caniuse.com/#search=await" target="_blank" rel="noopener">https://caniuse.com/#search=await</a></p><blockquote><p>async/await使得原本执行多行的promise程序简化成一行，提高代码的可读性</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于js是单线程的，所以说到js异步编程，我们会马上想到一个词“回调地狱”&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://qiqine.github.io/tags/javascript/"/>
    
      <category term="异步" scheme="http://qiqine.github.io/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>浏览器url编码</title>
    <link href="http://qiqine.github.io/2018/11/19/%E6%B5%8F%E8%A7%88%E5%99%A8url%E7%BC%96%E7%A0%81/"/>
    <id>http://qiqine.github.io/2018/11/19/浏览器url编码/</id>
    <published>2018-11-19T13:47:13.708Z</published>
    <updated>2018-11-20T13:40:33.973Z</updated>
    
    <content type="html"><![CDATA[<p>在开发过程中常常碰到编码问题，在url访问以及参数传递过程中有：encodeURIComponent，encodeURI，escape。<br>这些编码函数有什么区别，以及为什么需要编码，经常迷迷糊糊的用着。<br><a id="more"></a> </p><h3 id="为什么需要编码"><a href="#为什么需要编码" class="headerlink" title="为什么需要编码"></a>为什么需要编码</h3><p>Url的编码格式采用的是ASCII码，而不是Unicode，这也就是说你不能在Url中包含任何非ASCII字符，例如中文。<br>Url编码的原则就是使用安全的字符去表示那些不安全的字符。</p><blockquote><p><a href="https://tools.ietf.org/html/rfc3986" target="_blank" rel="noopener">RFC3986</a>文档规定，Url中只允许包含以下四种：</p><pre><code>1. 英文字母（a-zA-Z）2. 数字（0-9）3. -_.~ 4个特殊字符4. 所有保留字符，RFC3986中指定了以下字符为保留字符（英文字符）：!*&apos;();:@&amp;=+$,/?#[]</code></pre></blockquote><h3 id="哪些字符需要编码"><a href="#哪些字符需要编码" class="headerlink" title="哪些字符需要编码"></a>哪些字符需要编码</h3><p>如果需要在URL中用到特殊字符，需要将这些特殊字符换成相应的十六进制的值</p><ul><li>保留字符：Url可以划分成若干个组件，协议、主机、路径等。有一些字符（:/?#[]@）是用作分隔不同组件的。例如:冒号用于分隔协议和主机，/用于分隔主机和路径，?用于分隔路径和查询参数，等等。还有一些字符（!$&amp;’()*+,;=）用于在每个组件中起到分隔作用的，如=用于表示查询参数中的键值对，&amp;符号用于分隔查询多个键值对。当组件中的普通数据包含这些特殊字符时，需要对其进行编码。</li><li>不安全字符：有一些字符，当他们直接放在Url中的时候，可能会引起解析程序的歧义。这些字符被视为不安全字符。给去掉。</li><li>引号以及&lt;&gt;：引号和尖括号通常用于在普通文本中起到分隔Url的作用</li><li>#：通常用于表示书签或者锚点</li><li>%：百分号本身用作对不安全字符进行编码时使用的特殊字符，因此本身需要编码</li><li>{}|\^[]`~：某一些网关或者传输代理会篡改这些字符</li></ul><h3 id="如何对Url中的非法字符进行编码"><a href="#如何对Url中的非法字符进行编码" class="headerlink" title="如何对Url中的非法字符进行编码"></a>如何对Url中的非法字符进行编码</h3><p>Url编码通常也被称为百分号编码（Url Encoding，also known as percent-encoding），它的编码方式非常简单，使用%百分号加上两位的字符——0123456789ABCDEF——代表一个字节的十六进制形式。Url编码默认使用的字符集是US-ASCII。<br>比如:</p><blockquote><p>a在US-ASCII码中对应的字节是0x61，那么Url编码之后得到的就是%61，我们在地址栏上输入<a href="http://g.cn/search?q=%61%62%63" target="_blank" rel="noopener">http://g.cn/search?q=%61%62%63</a> ,实际上就等同于在google上搜索abc了。又如@符号在ASCII字符集中对应的字节为0x40，经过Url编码之后得到的是%40</p></blockquote><h3 id="Javascript中的escape-encodeURI和encodeURIComponent的区别"><a href="#Javascript中的escape-encodeURI和encodeURIComponent的区别" class="headerlink" title="Javascript中的escape, encodeURI和encodeURIComponent的区别"></a>Javascript中的escape, encodeURI和encodeURIComponent的区别</h3><p>共同点：<br>都是用于将不安全不合法的Url字符转换为合法的Url字符表示</p><p>不同点：</p><ol><li><p>安全字符（即函数不会对这些字符进行编码）不同：<br> escape（69个）：<em>/@+-._0-9a-zA-Z<br> encodeURI（82个）：!#$&amp;’()</em>+,/:;=?@-.<em>~0-9a-zA-Z<br> encodeURIComponent（71个）：!’()*-.</em>~0-9a-zA-Z</p></li><li><p>对Unicode字符的编码方式不同：<br> 这三个函数对于ASCII字符的编码方式相同，均是使用百分号+两位十六进制字符来表示。<br> 但是对于 Unicode字符，escape的编码方式是%uxxxx，其中的xxxx是用来表示unicode字符的4位十六进制字符。这种方式已经被W3C废弃了。<br> encodeURI和encodeURIComponent则使用UTF-8对非ASCII字符进行编码，然后再进行百分号编码。这是RFC推荐的。因此建议尽可能的使用这两个函数替代escape进行编码。</p></li><li><p>适用场合不同：encodeURI被用作对一个完整的URI进行编码，而encodeURIComponent被用作对URI的一个组件进行编码。从上面提到的安全字符范围来看，encodeURIComponent编码的字符范围要比encodeURI的大。</p><blockquote><p>保留字符一般是用来分隔URI组件（一个URI可以被切割成多个组件）或者子组件（如URI中查询参数的分隔符），如：号用于分隔 scheme和主机，?号用于分隔主机和路径。由于encodeURI操纵的对象是一个完整的的URI，这些字符在URI中本来就有特殊用途，因此这些保 留字符不会被encodeURI编码，否则意义就变了。</p></blockquote></li></ol><blockquote><p>组件内部有自己的数据表示格式，但是这些数据内部不能包含有分隔组件的保留字符，否则就会导致整个URI中组件的分隔混乱。因此对于单个组件使用encodeURIComponent，需要编码的字符就更多了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发过程中常常碰到编码问题，在url访问以及参数传递过程中有：encodeURIComponent，encodeURI，escape。&lt;br&gt;这些编码函数有什么区别，以及为什么需要编码，经常迷迷糊糊的用着。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://qiqine.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://qiqine.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>html5特殊链接处理</title>
    <link href="http://qiqine.github.io/2018/11/19/html5%E7%89%B9%E6%AE%8A%E9%93%BE%E6%8E%A5%E5%A4%84%E7%90%86/"/>
    <id>http://qiqine.github.io/2018/11/19/html5特殊链接处理/</id>
    <published>2018-11-19T12:48:56.536Z</published>
    <updated>2018-11-20T12:18:28.779Z</updated>
    
    <content type="html"><![CDATA[<p>在移动浏览器中实现拨打电话，调用sms发短信，发送email等功能很简单，只需要通过a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a" target="_blank" rel="noopener">href</a>链接简单的设置即可<br><a id="more"></a> </p><h3 id="拨打电话"><a href="#拨打电话" class="headerlink" title="拨打电话"></a>拨打电话</h3><p>微信号开发不支持？需要另外处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;tel:10086&quot;&gt;10086&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><p>发送短信的配置格式（可以同时给多个手机号发送短信，逗号隔开，body设置短信的内容）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sms:&lt;phone_number&gt;[,&lt;phone-number&gt;]*[?body=&lt;message_body&gt;]</span><br></pre></td></tr></table></figure><p>such as:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;sms:10086,10010?body=hello word&quot;&gt;发送信息&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><h3 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks#E-mail_links" target="_blank" rel="noopener">发送邮件</a></h3><p>会默认打开系统的默认邮件发送</p><blockquote><p>subject设置邮件主题<br>cc抄送人<br>mailto发送人<br>bcc密送<br>body邮件内容</p></blockquote><p>注：在pc端，如果刚开机或者系统默认邮件的进程被杀死，会导致无法打开发送功能，需要另外处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;&gt;</span><br><span class="line">  Send mail with cc, bcc, subject and body</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="打开Android-Market"><a href="#打开Android-Market" class="headerlink" title="打开Android Market"></a>打开Android Market</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;market://search?q=[query]&quot;&gt;Android Market link&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="GPS地图定位"><a href="#GPS地图定位" class="headerlink" title="GPS地图定位"></a>GPS地图定位</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;geopoint:[经度],[纬度]&quot;&gt;我的位置&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在移动浏览器中实现拨打电话，调用sms发短信，发送email等功能很简单，只需要通过a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;href&lt;/a&gt;链接简单的设置即可&lt;br&gt;
    
    </summary>
    
    
      <category term="移动端" scheme="http://qiqine.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="CSS" scheme="http://qiqine.github.io/tags/CSS/"/>
    
      <category term="html5" scheme="http://qiqine.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>去除浏览器默认样式</title>
    <link href="http://qiqine.github.io/2018/11/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%8E%BB%E9%99%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F/"/>
    <id>http://qiqine.github.io/2018/11/14/移动端去除浏览器默认样式/</id>
    <published>2018-11-14T12:15:32.942Z</published>
    <updated>2018-11-20T13:34:18.500Z</updated>
    
    <content type="html"><![CDATA[<p>移动端开发和pc端会有一些不同，需要兼容不同的设备，同时为了用户更好的交互体验，产品会提各种与原系统默认交互不一样的需求，这边整理下一些开发过程中比较常见的问题。<br><a id="more"></a> </p><h3 id="移除HTML5-input在type-”number”时的上下小箭头"><a href="#移除HTML5-input在type-”number”时的上下小箭头" class="headerlink" title="移除HTML5 input在type=”number”时的上下小箭头"></a>移除HTML5 input在type=”number”时的上下小箭头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">input::-webkit-outer-spin-button,</span><br><span class="line">input::-webkit-inner-spin-button &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    margin: 0; </span><br><span class="line">&#125;</span><br><span class="line">input[type=&apos;number&apos;] &#123;</span><br><span class="line">    -moz-appearance:textfield;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方案：</p><p>将type=”number”改为type=”tel”，同样是数字键盘，但是没有箭头。</p><h3 id="使用-CSS-去掉-iPhone-网页上按钮的超大圆角默认样式"><a href="#使用-CSS-去掉-iPhone-网页上按钮的超大圆角默认样式" class="headerlink" title="使用 CSS 去掉 iPhone 网页上按钮的超大圆角默认样式"></a>使用 CSS 去掉 iPhone 网页上按钮的超大圆角默认样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    -webkit-appearance:none; /*去除input默认样式*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="去掉高光样式"><a href="#去掉高光样式" class="headerlink" title="去掉高光样式"></a>去掉高光样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input:focus&#123;</span><br><span class="line">    -webkit-tap-highlight-color:rgba(0,0,0,0);</span><br><span class="line">    -webkit-user-modify:read-write-plaintext-only;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移动端点击阴影去除"><a href="#移动端点击阴影去除" class="headerlink" title="移动端点击阴影去除"></a>移动端点击阴影去除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0,0,0,0);</span><br><span class="line">    -webkit-tap-highlight-color:transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="去除Chrome等浏览器文本框默认发光边框-设置新的focus边框"><a href="#去除Chrome等浏览器文本框默认发光边框-设置新的focus边框" class="headerlink" title="去除Chrome等浏览器文本框默认发光边框,设置新的focus边框"></a>去除Chrome等浏览器文本框默认发光边框,设置新的focus边框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input:focus, textarea:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">    border: 1px solid #f20;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="去除IE10-浏览器文本框后面的小叉叉和type-”password”的小眼睛"><a href="#去除IE10-浏览器文本框后面的小叉叉和type-”password”的小眼睛" class="headerlink" title="去除IE10+浏览器文本框后面的小叉叉和type=”password”的小眼睛"></a>去除IE10+浏览器文本框后面的小叉叉和type=”password”的小眼睛</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input::-ms-clear, input::-ms-reveal &#123;</span><br><span class="line">　　display: none;</span><br><span class="line">&#125;</span><br><span class="line">//::-ms-clear  input右方的叉叉</span><br><span class="line">//::-ms-reveal  密码框右边的小眼睛。</span><br></pre></td></tr></table></figure><h3 id="禁止多行文本框textarea拖拽"><a href="#禁止多行文本框textarea拖拽" class="headerlink" title="禁止多行文本框textarea拖拽"></a>禁止多行文本框textarea拖拽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">textarea &#123;</span><br><span class="line">    resize: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;移动端开发和pc端会有一些不同，需要兼容不同的设备，同时为了用户更好的交互体验，产品会提各种与原系统默认交互不一样的需求，这边整理下一些开发过程中比较常见的问题。&lt;br&gt;
    
    </summary>
    
    
      <category term="移动端" scheme="http://qiqine.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="CSS" scheme="http://qiqine.github.io/tags/CSS/"/>
    
      <category term="html5" scheme="http://qiqine.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://qiqine.github.io/2018/11/14/hello-world/"/>
    <id>http://qiqine.github.io/2018/11/14/hello-world/</id>
    <published>2018-11-14T11:47:13.966Z</published>
    <updated>2018-11-20T12:17:58.620Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<a id="more"></a> </p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.
    
    </summary>
    
    
      <category term="Test" scheme="http://qiqine.github.io/tags/Test/"/>
    
  </entry>
  
</feed>
